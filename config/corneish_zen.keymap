#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
  chosen {
    zmk,matrix_transform = &default_transform;
  };
};

/ {
    combos {
        compatible = "zmk,combos";
        combo_brace_open {
            timeout-ms = <25>;
            key-positions = <3 4>;
            bindings = <&kp LEFT_BRACE>;
        };
		combo_brace_close {
            timeout-ms = <25>;
            key-positions = <7 8>;
            bindings = <&kp RIGHT_BRACE>;
        };
		combo_paren_open {
            timeout-ms = <25>;
            key-positions = <15 16>;
            bindings = <&kp LEFT_PARENTHESIS>;
        };
		combo_paren_close {
            timeout-ms = <25>;
            key-positions = <19 20>;
            bindings = <&kp RIGHT_PARENTHESIS>;
        };
		combo_bracket_open {
            timeout-ms = <25>;
            key-positions = <27 28>;
            bindings = <&kp LEFT_BRACKET>;
        };
		combo_bracket_close {
            timeout-ms = <25>;
            key-positions = <31 32>;
            bindings = <&kp RIGHT_BRACKET>;
        };
    };
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};

/ {
    macros {
		arrow_macro: arrow_macro {
            label = "arrow_macro";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp EQUAL>
                , <&macro_tap &kp GREATER_THAN>
                ;
        };
    };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "QWERTY";
// -----------------------------------------------------------------------------------------
// | ESC   |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | LGUI |
// | TAB   |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | LCTRL |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ENT  |
//                  | LSHFT | LWR | BSPC |   | SPACE | RSE  | ALT |
                        bindings = <
   &kp ESC   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp LGUI
   &kp TAB	 &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LCTRL &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RET
                  &kp LSHFT &mo 1 &kp BSPC   &kp SPACE &mo 2 &kp LALT
                        >;
                };
                lower_layer {
                        label = "NUMBER";
// --------------------------------------------------------------------------------------------
// |      | GRAVE | TILDE | MINUS | UNDER |     |   |      | PLUS | EQUAL | => |     |      |
// |      |  1    |  2    |  3    |  4    |  5  |   |  6   |  7    |  8  |  9  |  0  |      |
// | SHFT | F1    | F2    | F3    | F4    | F5  |   | F6   | F7    | F8  | F9  | F10 |      |
//                            |     |     | DLT |   |    |     |    |
                        bindings = <
   &trans &kp GRAVE    &kp TILDE    &kp MINUS    &kp UNDER 	  &none		     &none	  &kp PLUS &kp EQUAL &arrow_macro	   &none   &trans
   &trans &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 	 &kp N9    &kp N0  &trans
   &trans &kp F1       &kp F2       &kp F3       &kp F4       &kp F5         &kp F6   &kp F7   &kp F8 	 &kp F9    &kp F10 &trans
                          	        &trans       &trans       &kp DELETE     &trans   &trans   &trans
                        >;
                };

                raise_layer {
                        label = "SYMBOL";
// -----------------------------------------------------------------------------------------
// |      | GRAVE | TILDE | MINUS | UNDER |     |   |      | PLUS | EQUAL |     |     |     |
// |      |  !    |  @    |  #    |  $    |  %  |   |  ^   |  &   |  *    | "|" |  \  |     |
// |      | F11   | F12   | F13   | F14   |     |   |      |      |       |     |     |     |
//                            |     |     | DLT |   |    |     |    |
                        bindings = <
   &trans &kp GRAVE  &kp TILDE  &kp MINUS  &kp UNDER  &none		  &none	     &kp PLUS   &kp EQUAL         &arrow_macro   &none          &trans
   &trans &kp EXCL   &kp AT     &kp HASH   &kp DLLR   &kp PRCNT   &kp CARET  &kp AMPS   &kp KP_MULTIPLY   &kp PIPE       &kp BACKSLASH  &trans
   &trans &kp F11	 &kp F12    &kp F13    &kp F14    &none       &none      &none      &none             &none          &none          &trans
                          	&trans       &trans       &kp DELETE     &trans   &trans   &trans
                        >;
                };


				tri_layer {
                        label = "NAV";
// -----------------------------------------------------------------------------------------
// |  PLYPS |  vol-  |  vol+  |  prev  |  next |     | |     | brght-  |  brght+  |      |        |       | 
// |        |  home  |  pgdn  |  pgup  |  end  |     | |     |  left   |  down    |  up  |  right | nmlk  |
// |        | BTCLR  |  BT1   |  BT2   |  BT3  | BT4 | | BT5 |         |          |      |        | cpslk |
//                            	   |     |     | DLT | |    |     |    |
                        bindings = <
   &kp  C_PP  &kp C_VOL_DN    &kp C_VOL_UP  &kp C_PREV   &kp C_NEXT   &none         &none         &kp C_BRIGHTNESS_DEC &kp C_BRIGHTNESS_INC &none   &none 	   &none
   &trans     &kp HOME     	  &kp PG_DN     &kp PG_UP    &kp END      &none         &none         &kp LEFT 		    &kp DOWN             &kp UP  &kp RIGHT &kp KP_NUMLOCK
   &trans     &bt BT_CLR      &bt BT_SEL 0  &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3  &bt BT_SEL 4  &trans   			&trans   			 &trans  &kp UNDER &kp CAPS
                          				&trans       &trans       &kp DELETE     &trans   &trans   &trans
                        >;
                };
        };
};
